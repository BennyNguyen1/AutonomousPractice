//Create a new file, and title it with your name. Code for the objective in the description. Collaborate with others, but please have your own file to code with in order to practice properly.
//This is the answer key for the first one. Please complete your own solution before checking in with this one.

package org.firstinspires.ftc.teamcode;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.eventloop.opmode.Disabled;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;

@Autonomous
public class AutonomousPractice1 extends LinearOpMode {
  private DcMotor left1;
  private DcMotor left2;
  private DcMotor righ2;
  private DcMotor right2;
  
  private final double wheelCircumference = 90*3.14;
  private final double gearReduction = 3.61*5.23;
  //values can be found with google (ex. https://www.revrobotics.com/rev-41-1603/)
  private final double motorCounts = 28.0
  public void runOpMode(){
    left1 = hardwareMap.get(DcMotor, "leftMotor1");
    left2 = hardwareMap.get(DcMotor, "leftMotor2");
    right1 = hardwareMap.get(DcMotor, "rightMotor1");
    right1 = hardwareMap.get(DcMotor, "rightMotor2");
    
    int tgt = tickstoDistance(740);
    
    left1.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
    left2.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
    right1.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
    right2.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
    
    left1.setTargetPosition(tgt);
    right1.setTargetPosition(tgt);
    right2.setTargetPosition(tgt);
    left2.setTargetPosition(tgt);
    
    left1.setMode(1);
    left2.setMode(1);
    right1.setMode(1);
    right2.setMode(1);
    
    left1.setPower(1);
    left2.setPower(1);
    right1.setPower(1);
    right2.setPower(1);
    
    while(opModeIsActive() && left1.isBusy() && left2.isBusy() && right1.isBusy() && right2.isBusy())
    {
      telemtry.addData("Position: ", "left1.getCurrentPosition());
    }
  }
  //method formula to convert from motorCounts to MM
  public int ticksToDistance(int distance){
    return (int)distance*((gearReduction*motorCounts)/wheelCircumference);
  }
}
